syntax = "proto3";
package aakcast.auth;


////////////////////////////////////////////////////////////////////////////////
// Common message definitions

message Empty {}

message Id {
    string id = 1;
}

message ServiceDescriptor {
    string service = 1;
    string version = 2;
}


////////////////////////////////////////////////////////////////////////////////
// AuthService definition

service AuthService {
    // Hello
    rpc Hello(auth.Empty) returns (auth.ServiceDescriptor);

    // Accounts: authentication by username + password
    rpc CreateAccount(auth.CreateAccountRequest) returns (auth.Id);
    rpc UpdateAccount(auth.UpdateAccountRequest) returns (auth.Empty);
    rpc ValidateAccount(auth.ValidateAccountRequest) returns (auth.Authentication);

    // OTP: temporary credentials
    rpc CreateTemporaryCredentials(auth.CreateTemporaryCredentialsRequest) returns (auth.Otp);
    rpc ValidateTemporaryCredentials(auth.ValidateTemporaryCredentialsRequest) returns (auth.Authentication);
}


////////////////////////////////////////////////////////////////////////////////
// Message definitions

message Authentication {
    string id = 1;
    string username = 3;
    repeated string roles = 4;
    bool is_admin = 5;
}

message Otp {
    string code = 1;
}

message CreateAccountRequest {
    string username = 1;
    string password = 2;
}

message UpdateAccountRequest {
    string id = 1;
    optional string password = 2;
    optional string staff_id = 3;
    optional string seller_id = 4;
}

message ValidateAccountRequest {
    string username = 1;
    string password = 2;
}

message CreateTemporaryCredentialsRequest {
    string mobile = 1;
    uint32 digits = 2;
    optional string expires = 3;
}

message ValidateTemporaryCredentialsRequest {
    string mobile = 1;
    uint32 code = 2;
}
